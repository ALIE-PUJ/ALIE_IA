from langchain_openai import ChatOpenAI
from langchain.agents import initialize_agent
from langchain.agents import AgentType
# from langchain.chat_models import ChatOpenAI # eSTE IMPORT DA ERROR, ELIMINARLO DE TODO LADO SI ES POSIBLE.
from langchain.agents import tool
from datetime import date

# Importar libreria propia
from Library.DBsearchTests_Library import *

# Definir el modelo
llm = ChatOpenAI(
    model="lmstudio-community/Meta-Llama-3-8B-Instruct-GGUF",
    temperature=0.9,
    max_tokens=None,
    timeout=None,
    max_retries=2,
    base_url="http://localhost:1234/v1",
    api_key="lm-studio"    # organization="...",
    # other params...
)

# Memoria
from langchain.memory import ConversationBufferMemory
memory = ConversationBufferMemory(memory_key="chat_history")

@tool
def general_query_handler(user_input: str) -> str:
    """
    Handle general queries directed to the conversational agent ALIE.

    This function is designed to respond to common user queries that do not require specific
    information from databases or external tools. It includes responses to questions about
    the agent's identity, purpose, and general academic inquiries.

    Parameters:
    user_input (str): The input query from the user.

    Returns:
    str: The response generated by ALIE for the given input.
    """
    
    # Normalize user input to lowercase for easier matching
    normalized_input = user_input.lower()

    # Define standard responses for general queries
    responses = {
        "who are you": "I am ALIE, an academic assistance agent designed to help resolve inquiries at Javeriana University.",
        "what is your name": "My name is ALIE, which stands for Academic Learning and Information Expert.",
        "what do you do": "I assist with academic inquiries and provide support for students, faculty, and staff at Javeriana University.",
        "how can you help me": "I can help you with a variety of academic-related questions, such as course information, schedules, and general university resources.",
        "tell me about yourself": "I am ALIE, a conversational agent developed to enhance the academic experience at Javeriana University by providing timely and accurate information.",
        "what is javeriana university": "Javeriana University, also known as Pontificia Universidad Javeriana, is a prestigious educational institution located in Colombia, known for its excellence in teaching and research.",
        "what services do you offer": "I offer support in resolving academic inquiries, providing information about courses, schedules, and other university-related matters."
    }

    # Default response if the query doesn't match any predefined general queries
    default_response = "I'm here to help with any academic inquiries you may have. How can I assist you today?"

    # Check if the user input matches any predefined queries
    response = responses.get(normalized_input, default_response)

    return response

# Inicializar el agente
agent = initialize_agent(
    [general_query_handler,
     get_students_by_name,
     get_course_by_name,
     get_classes_by_course_code,
     get_classes_by_course_name,
     get_class_by_code,
     get_prerequisites_by_course_code,
     get_prerequisites_by_course_name,
     get_class_schedule,
     get_teacher_by_name], 
    llm,
    memory=memory, 
    agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION, # Se pueden usar varios tipos. Probar
    handle_parsing_errors=True,
    verbose = True,
    max_execution_time=30 # Tiempo máximo de ejecución (En segundos)
    )

# Q&A
question1 = "Is there any student called Luis? Who?"
question2 = "Which is the course code for Estructuras de datos?" # Hay que remover las tildes de las inserciones SQL.
question3 = "Which are the available classes for the course with code 4196?"
question4 = "Which are the available classes for the Estructuras de datos course? Give me their codes"
question5 = "Which are the prerequisites for Estructuras de datos?"
question6 = "Which are the prerequisites for the course with code 4196?"
question7 = "Which are the available schedules for class 1557?"
question8 = "Are there any teachers called Oscar? Who?"

output = agent.run(
    input=(
        "[System] You are ALIE, an academic assistance agent designed to help resolve inquiries at Javeriana University. Use tools to retrieve information from databases and external sources, or just answer without the use of tools if the user just wants to interact with you."
        " [User] " + question8
    )
)
print("Answer: ", output)

# Si se queda en un bucle de "Pensamiento" hay que hacer manejo de errores